// tawoesoft.co.uk/go/operator
// 
// Copyright © 2020 Tawesoft Ltd <open-source@tawesoft.co.uk>
// Copyright © 2020 Ben Golightly <ben@tawesoft.co.uk>
// 
// Permission is hereby granted, free of charge, to any person obtaining a copy
// of this software and associated documentation files (the "Software"), to deal
// in the Software without restriction,  including without limitation the rights
// to use,  copy, modify,  merge,  publish, distribute, sublicense,  and/or sell
// copies  of  the  Software,  and  to  permit persons  to whom  the Software is
// furnished to do so.
// 
// THE SOFTWARE IS PROVIDED  "AS IS",  WITHOUT WARRANTY OF ANY KIND,  EXPRESS OR
// IMPLIED,  INCLUDING  BUT  NOT LIMITED TO THE WARRANTIES  OF  MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE  AND NONINFRINGEMENT.  IN NO EVENT SHALL THE
// AUTHORS  OR COPYRIGHT HOLDERS  BE LIABLE  FOR ANY  CLAIM,  DAMAGES  OR  OTHER
// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
// SOFTWARE.
// 

// Package operator implements logical, arithmetic, bitwise and comparison
// operators as functions (like the Python operator module). Includes unary,
// binary, and n-ary functions with overflow checked variants.
// 
// Examples
// 
// Using operators as function arguments
//
//     package main
//     
//     import (
//         "fmt"
//         "tawesoft.co.uk/go/operator"
//     )
//     
//     func foo(op func(int, int) int, a int, b int) int {
//         return op(a, b)
//     }
//     
//     func fooChecked(op func(int8, int8) (int8, error), a int8, b int8) (int8, error) {
//         return op(a, b)
//     }
//     
//     func main() {
//         fmt.Println(foo(operator.Int.Binary.Add, 5, 3))
//         fmt.Println(foo(operator.Int.Binary.Sub, 5, 3))
//         
//         var result, err = fooChecked(operator.Int8Checked.Binary.Add, 126, 2) // max int8 is 127!
//         if err != nil {
//             fmt.Printf("error: %v (expected!)\n", err)
//         } else {
//             fmt.Println(result)
//         }
//     }
//
// Using operators in lookup tables for a command-line calculator program
//
//     package main
//     
//     import (
//         "bufio"
//         "fmt"
//         "os"
//         "strconv"
//         "strings"
//         
//         "tawesoft.co.uk/go/operator"
//     )
//     
//     type checkedOperation func(float64, float64) (float64, error)
//     
//     var reader = bufio.NewReader(os.Stdin)
//     
//     var operations = map[string]checkedOperation {
//         "+": operator.Float64Checked.Binary.Add,
//         "-": operator.Float64Checked.Binary.Sub,
//         "*": operator.Float64Checked.Binary.Mul,
//         "/": operator.Float64Checked.Binary.Div,
//     }
//     
//     func getNumber(prompt string) float64 {
//         for {
//             fmt.Print(prompt)
//             var text, _ = reader.ReadString('\n')
//             var result, err = strconv.ParseFloat(strings.TrimSpace(text), 64)
//             if err != nil {
//                 fmt.Println("Sorry, try again. (%v)", err)
//                 continue
//             }
//             return result
//         }
//     }
//     
//     func getOperation(prompt string) checkedOperation {
//         for {
//             fmt.Print(prompt)
//             var text, _ = reader.ReadString('\n')
//             var operator, ok = operations[strings.TrimSpace(text)]
//             if !ok {
//                 fmt.Println("Sorry, try again.")
//                 continue
//             }
//             return operator
//         }
//     }
//     
//     func main() {
//         var firstNumber = getNumber("Enter a number (then press enter): ")
//         var operation = getOperation("Enter +, -, * or / (then press enter) for add, subtract, multiply, or divide: ")
//         var secondNumber = getNumber("Enter another number (then press enter): ")
//         var result, err = operation(firstNumber, secondNumber)
//         if err != nil {
//             fmt.Printf("Sorry, something went wrong: %v\n", err)
//         } else {
//             fmt.Printf("The result is %.2f!\n", result)
//         }
//     }
//
//
// Package Information
//
// License: MIT-0 (see LICENSE.txt)
//
// Stable: yes
//
// For more information, documentation, source code, examples, support, links,
// etc. please see https://www.tawesoft.co.uk/go and 
// https://www.tawesoft.co.uk/go/operator
package operator // import "tawesoft.co.uk/go/operator"

// Code generated by internal. DO NOT EDIT.
// Instead, edit DESC.txt and run mkdocs.sh.