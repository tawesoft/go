SPDX-License-Identifier: MIT
short-desc: concurrent dependency graph solver
stable: no

---

Package loader implements the ability to define a graph of tasks and
dependencies, classes of synchronous and concurrent workers, and limiting
strategies, and solve the graph incrementally or totally.

For example, this could be used to implement a loading screen for a computer
game with a progress bar that updates in real time, with images being decoded
concurrently with files being loaded from disk, and synchronised with the main
thread for safe OpenGL operations such as creating texture objects on the GPU.

While this package is generally suitable for use in real world applications,
we are waiting to get some experience with how it works for us in an internal
application before polishing or committing to a stable API.

TODO: doesn't yet free temporary results

TODO: refactor the load loop to always send/receive at the same time

TODO: clean up generally

TODO: not decided about the API for Loader.Result (but loader.MustResult is ok)

TODO: a step to simplify the DAG to remove passthrough loader.NamedTask steps

Examples

EXAMPLE: limit-connections-per-host
