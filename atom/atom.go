/*
Package atom defines an interface and simple implementations for uniquely mapping any set of known-constant strings to
a set of integers for efficient communication and equality operations.

Atoms are used by X11 (https://tronche.com/gui/x/xlib/window-information/XInternAtom.html),
Win32 (https://docs.microsoft.com/en-us/windows/win32/dataxchg/about-atom-tables),
and Go internally (https://godoc.org/golang.org/x/net/html/atom).

This is a very simple interface with a very simple implementation. Features like reference counting atoms, iterating
over atoms, alternative implementations, etc. are deliberately omitted at present.

The exact integer representation of an Atom is opaque. If two Atoms from the same collection compare equal then their
string representations also compare equal. If two strings from the same collection compare equal then their Atom
representations also compare equal.

Example:

    package main
    
    import "tawesoft.co.uk/go/atom"
    
    func main() {
        var atoms = atom.SimpleAtoms()
        
        var atom1 = atoms.Get("Atom One")
        var atom2 = atoms.Get("Atom Two")
        
        if atom1 == atom2 {
            // do something ...
        }
    }

For license information, documentation, source code, support, links, etc. please see
https://tawesoft.co.uk/go/atom

This module is part of https://tawesoft.co.uk/go
*/
package atom // import "tawesoft.co.uk/go/atom"

// SPDX-License-Identifier: MIT-0

// Code generated by (tawesoft.co.uk/go/) fluff.py: DO NOT EDIT.