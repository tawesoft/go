// tawesoft.co.uk/go/humanizex
// 
// Copyright © 2021 Tawesoft Ltd <open-source@tawesoft.co.uk>
// Copyright © 2021 Ben Golightly <ben@tawesoft.co.uk>
// 
// Permission is hereby granted, free of charge, to any person obtaining a copy
// of this software and associated documentation files (the "Software"), to deal
// in the Software without restriction,  including without limitation the rights
// to use,  copy, modify,  merge,  publish, distribute, sublicense,  and/or sell
// copies  of  the  Software,  and  to  permit persons  to whom  the Software is
// furnished to do so, subject to the following conditions:
// 
// The above copyright notice and this permission notice shall be included in all
// copies or substantial portions of the Software.
// 
// THE SOFTWARE IS PROVIDED  "AS IS",  WITHOUT WARRANTY OF ANY KIND,  EXPRESS OR
// IMPLIED,  INCLUDING  BUT  NOT LIMITED TO THE WARRANTIES  OF  MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE  AND NONINFRINGEMENT.  IN NO EVENT SHALL THE
// AUTHORS  OR COPYRIGHT HOLDERS  BE LIABLE  FOR ANY  CLAIM,  DAMAGES  OR  OTHER
// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
// SOFTWARE.

// Package humanizex is an elegant, general-purpose, extensible, modular,
// locale-aware way to format and parse numbers and quantities - like distances,
// bytes, and time - in a human-readable way ideal for config files and as a
// building-block for fully translated ergonomic user interfaces.
// 
// If golang.org/x/text is ever promoted to core then there will be a new version
// of this package named `humanize` (dropping the 'x').
// 
// What about dustin's go-humanize?
// 
// dustin's go-humanize (https://github.com/dustin/go-humanize) is 3.9 to 4.5
// times faster formatting and 2 times faster parsing, if this is a bottleneck for
// you. It's also quite mature, so is probably very well tested by now. If you're
// only targeting the English language it also has more handy "out of the box"
// features.
// 
// On the other hand, tawesoft's humanizex is more general purpose and has better
// localisation support. Even with those extra features, tawesoft's humanizex
// codebase is also smaller and simpler.
// 
// Examples
// 
// Example formatting and parsing Byte quantities in various locales
//
// https://www.tawesoft.co.uk/go/doc/humanizex/examples/simple/
//
// Example leveraging the raw parts of FormatParts to handle durations in a
// custom even nicer way for the english language.
//
// https://www.tawesoft.co.uk/go/doc/humanizex/examples/custom-durations/
//
// Example using custom time factors from the Battlestar Galactica 1978 TV
// series.
//
// https://www.tawesoft.co.uk/go/doc/humanizex/examples/custom-factors/
//
//
// Package Information
//
// License: MIT (see LICENSE.txt)
//
// Stable: no
//
// For more information, documentation, source code, examples, support, links,
// etc. please see https://www.tawesoft.co.uk/go and 
// https://www.tawesoft.co.uk/go/humanizex
package humanizex // import "tawesoft.co.uk/go/humanizex"

// Code generated by internal. DO NOT EDIT.
// Instead, edit DESC.txt and run mkdocs.sh.